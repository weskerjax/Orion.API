#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Orion.API.Tests
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OrionApi")]
	public partial class OrionApiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertInvoiceIssue(InvoiceIssue instance);
    partial void UpdateInvoiceIssue(InvoiceIssue instance);
    partial void DeleteInvoiceIssue(InvoiceIssue instance);
    partial void InsertInvoiceIssueItems(InvoiceIssueItems instance);
    partial void UpdateInvoiceIssueItems(InvoiceIssueItems instance);
    partial void DeleteInvoiceIssueItems(InvoiceIssueItems instance);
    partial void InsertInventoryTemp(InventoryTemp instance);
    partial void UpdateInventoryTemp(InventoryTemp instance);
    partial void DeleteInventoryTemp(InventoryTemp instance);
    #endregion
		
		public OrionApiDataContext() : 
				base(global::Orion.API.Tests.Properties.Settings.Default.OrionApiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OrionApiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrionApiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrionApiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrionApiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InvoiceIssue> InvoiceIssue
		{
			get
			{
				return this.GetTable<InvoiceIssue>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceIssueItems> InvoiceIssueItems
		{
			get
			{
				return this.GetTable<InvoiceIssueItems>();
			}
		}
		
		public System.Data.Linq.Table<InventoryTemp> InventoryTemp
		{
			get
			{
				return this.GetTable<InventoryTemp>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceIssue")]
	public partial class InvoiceIssue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private string _InvoicePrefix;
		
		private int _InvoiceNum;
		
		private System.DateTime _InvoiceDate;
		
		private string _DeliveryCustCode;
		
		private string _DeliveryCustName;
		
		private decimal _Total;
		
		private int _CreateBy;
		
		private System.DateTime _CreateDate;
		
		private int _ModifyBy;
		
		private System.DateTime _ModifyDate;
		
		private EntitySet<InvoiceIssueItems> _InvoiceIssueItems;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoicePrefixChanging(string value);
    partial void OnInvoicePrefixChanged();
    partial void OnInvoiceNumChanging(int value);
    partial void OnInvoiceNumChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnDeliveryCustCodeChanging(string value);
    partial void OnDeliveryCustCodeChanged();
    partial void OnDeliveryCustNameChanging(string value);
    partial void OnDeliveryCustNameChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnCreateByChanging(int value);
    partial void OnCreateByChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifyByChanging(int value);
    partial void OnModifyByChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public InvoiceIssue()
		{
			this._InvoiceIssueItems = new EntitySet<InvoiceIssueItems>(new Action<InvoiceIssueItems>(this.attach_InvoiceIssueItems), new Action<InvoiceIssueItems>(this.detach_InvoiceIssueItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePrefix", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string InvoicePrefix
		{
			get
			{
				return this._InvoicePrefix;
			}
			set
			{
				if ((this._InvoicePrefix != value))
				{
					this.OnInvoicePrefixChanging(value);
					this.SendPropertyChanging();
					this._InvoicePrefix = value;
					this.SendPropertyChanged("InvoicePrefix");
					this.OnInvoicePrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNum", DbType="Int NOT NULL")]
		public int InvoiceNum
		{
			get
			{
				return this._InvoiceNum;
			}
			set
			{
				if ((this._InvoiceNum != value))
				{
					this.OnInvoiceNumChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNum = value;
					this.SendPropertyChanged("InvoiceNum");
					this.OnInvoiceNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCustCode", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string DeliveryCustCode
		{
			get
			{
				return this._DeliveryCustCode;
			}
			set
			{
				if ((this._DeliveryCustCode != value))
				{
					this.OnDeliveryCustCodeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCustCode = value;
					this.SendPropertyChanged("DeliveryCustCode");
					this.OnDeliveryCustCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCustName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DeliveryCustName
		{
			get
			{
				return this._DeliveryCustName;
			}
			set
			{
				if ((this._DeliveryCustName != value))
				{
					this.OnDeliveryCustNameChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCustName = value;
					this.SendPropertyChanged("DeliveryCustName");
					this.OnDeliveryCustNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int NOT NULL")]
		public int CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="Int NOT NULL")]
		public int ModifyBy
		{
			get
			{
				return this._ModifyBy;
			}
			set
			{
				if ((this._ModifyBy != value))
				{
					this.OnModifyByChanging(value);
					this.SendPropertyChanging();
					this._ModifyBy = value;
					this.SendPropertyChanged("ModifyBy");
					this.OnModifyByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceIssue_InvoiceIssueItems", Storage="_InvoiceIssueItems", ThisKey="InvoiceId", OtherKey="InvoiceId")]
		public EntitySet<InvoiceIssueItems> InvoiceIssueItems
		{
			get
			{
				return this._InvoiceIssueItems;
			}
			set
			{
				this._InvoiceIssueItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceIssueItems(InvoiceIssueItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceIssue = this;
		}
		
		private void detach_InvoiceIssueItems(InvoiceIssueItems entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceIssue = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceIssueItems")]
	public partial class InvoiceIssueItems : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private int _InvoiceId;
		
		private string _DeliveryNum;
		
		private string _PurchaseNum;
		
		private int _Qty;
		
		private decimal _Price;
		
		private decimal _TotalPrice;
		
		private EntityRef<InvoiceIssue> _InvoiceIssue;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnDeliveryNumChanging(string value);
    partial void OnDeliveryNumChanged();
    partial void OnPurchaseNumChanging(string value);
    partial void OnPurchaseNumChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnTotalPriceChanging(decimal value);
    partial void OnTotalPriceChanged();
    #endregion
		
		public InvoiceIssueItems()
		{
			this._InvoiceIssue = default(EntityRef<InvoiceIssue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int NOT NULL")]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._InvoiceIssue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryNum", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DeliveryNum
		{
			get
			{
				return this._DeliveryNum;
			}
			set
			{
				if ((this._DeliveryNum != value))
				{
					this.OnDeliveryNumChanging(value);
					this.SendPropertyChanging();
					this._DeliveryNum = value;
					this.SendPropertyChanged("DeliveryNum");
					this.OnDeliveryNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNum", DbType="NVarChar(15)")]
		public string PurchaseNum
		{
			get
			{
				return this._PurchaseNum;
			}
			set
			{
				if ((this._PurchaseNum != value))
				{
					this.OnPurchaseNumChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNum = value;
					this.SendPropertyChanged("PurchaseNum");
					this.OnPurchaseNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money NOT NULL")]
		public decimal TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceIssue_InvoiceIssueItems", Storage="_InvoiceIssue", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
		public InvoiceIssue InvoiceIssue
		{
			get
			{
				return this._InvoiceIssue.Entity;
			}
			set
			{
				InvoiceIssue previousValue = this._InvoiceIssue.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceIssue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceIssue.Entity = null;
						previousValue.InvoiceIssueItems.Remove(this);
					}
					this._InvoiceIssue.Entity = value;
					if ((value != null))
					{
						value.InvoiceIssueItems.Add(this);
						this._InvoiceId = value.InvoiceId;
					}
					else
					{
						this._InvoiceId = default(int);
					}
					this.SendPropertyChanged("InvoiceIssue");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.#InventoryTemp")]
	public partial class InventoryTemp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InventoryId;
		
		private string _MaterialCode;
		
		private string _BranchFactory;
		
		private string _ZoneCode;
		
		private string _BatchCode;
		
		private decimal _Quantity;
		
		private System.DateTime _ModifyDate;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIdChanging(int value);
    partial void OnInventoryIdChanged();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    partial void OnBranchFactoryChanging(string value);
    partial void OnBranchFactoryChanged();
    partial void OnZoneCodeChanging(string value);
    partial void OnZoneCodeChanged();
    partial void OnBatchCodeChanging(string value);
    partial void OnBatchCodeChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnModifyDateChanging(System.DateTime value);
    partial void OnModifyDateChanged();
    #endregion
		
		public InventoryTemp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this.OnInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._InventoryId = value;
					this.SendPropertyChanged("InventoryId");
					this.OnInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchFactory", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string BranchFactory
		{
			get
			{
				return this._BranchFactory;
			}
			set
			{
				if ((this._BranchFactory != value))
				{
					this.OnBranchFactoryChanging(value);
					this.SendPropertyChanging();
					this._BranchFactory = value;
					this.SendPropertyChanged("BranchFactory");
					this.OnBranchFactoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneCode", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ZoneCode
		{
			get
			{
				return this._ZoneCode;
			}
			set
			{
				if ((this._ZoneCode != value))
				{
					this.OnZoneCodeChanging(value);
					this.SendPropertyChanging();
					this._ZoneCode = value;
					this.SendPropertyChanged("ZoneCode");
					this.OnZoneCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchCode", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string BatchCode
		{
			get
			{
				return this._BatchCode;
			}
			set
			{
				if ((this._BatchCode != value))
				{
					this.OnBatchCodeChanging(value);
					this.SendPropertyChanging();
					this._BatchCode = value;
					this.SendPropertyChanged("BatchCode");
					this.OnBatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
