#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Orion.API.Tests
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sqlite")]
	public partial class OrionApiSqliteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
	#region 擴充性方法定義
	partial void OnCreated();
	partial void InsertPrintQueue(PrintQueue instance);
	partial void UpdatePrintQueue(PrintQueue instance);
	partial void DeletePrintQueue(PrintQueue instance);
	#endregion
		
		public OrionApiSqliteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrionApiSqliteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrionApiSqliteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrionApiSqliteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PrintQueue> PrintQueue
		{
			get
			{
				return this.GetTable<PrintQueue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class PrintQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CreateTime;
		
		private string _CommandNo;
		
		private string _CommandStatus;
		
		private string _PrintId;
		
		private string _TempName;
		
		private string _PrintInfo;
		
		private string _Prefix;
		
		private int _StartNo;
		
		private int _EndNo;
		
		private int _NowNo;
		
	#region 擴充性方法定義
	partial void OnLoaded();
	partial void OnValidate(System.Data.Linq.ChangeAction action);
	partial void OnCreated();
	partial void OnCreateTimeChanging(System.DateTime value);
	partial void OnCreateTimeChanged();
	partial void OnCommandNoChanging(string value);
	partial void OnCommandNoChanged();
	partial void OnCommandStatusChanging(string value);
	partial void OnCommandStatusChanged();
	partial void OnPrintIdChanging(string value);
	partial void OnPrintIdChanged();
	partial void OnTempNameChanging(string value);
	partial void OnTempNameChanged();
	partial void OnPrintInfoChanging(string value);
	partial void OnPrintInfoChanged();
	partial void OnPrefixChanging(string value);
	partial void OnPrefixChanged();
	partial void OnStartNoChanging(int value);
	partial void OnStartNoChanged();
	partial void OnEndNoChanging(int value);
	partial void OnEndNoChanged();
	partial void OnNowNoChanging(int value);
	partial void OnNowNoChanged();
	#endregion
		
		public PrintQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DATETIME NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandNo", DbType="VARCHAR(8) NOT NULL", CanBeNull=false)]
		public string CommandNo
		{
			get
			{
				return this._CommandNo;
			}
			set
			{
				if ((this._CommandNo != value))
				{
					this.OnCommandNoChanging(value);
					this.SendPropertyChanging();
					this._CommandNo = value;
					this.SendPropertyChanged("CommandNo");
					this.OnCommandNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandStatus", DbType="VARCHAR(20) NOT NULL", CanBeNull=false)]
		public string CommandStatus
		{
			get
			{
				return this._CommandStatus;
			}
			set
			{
				if ((this._CommandStatus != value))
				{
					this.OnCommandStatusChanging(value);
					this.SendPropertyChanging();
					this._CommandStatus = value;
					this.SendPropertyChanged("CommandStatus");
					this.OnCommandStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintId", DbType="VARCHAR(20) NOT NULL", CanBeNull=false)]
		public string PrintId
		{
			get
			{
				return this._PrintId;
			}
			set
			{
				if ((this._PrintId != value))
				{
					this.OnPrintIdChanging(value);
					this.SendPropertyChanging();
					this._PrintId = value;
					this.SendPropertyChanged("PrintId");
					this.OnPrintIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempName", DbType="VARCHAR(20) NOT NULL", CanBeNull=false)]
		public string TempName
		{
			get
			{
				return this._TempName;
			}
			set
			{
				if ((this._TempName != value))
				{
					this.OnTempNameChanging(value);
					this.SendPropertyChanging();
					this._TempName = value;
					this.SendPropertyChanged("TempName");
					this.OnTempNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintInfo", DbType="VARCHAR(8000) NOT NULL", CanBeNull=false)]
		public string PrintInfo
		{
			get
			{
				return this._PrintInfo;
			}
			set
			{
				if ((this._PrintInfo != value))
				{
					this.OnPrintInfoChanging(value);
					this.SendPropertyChanging();
					this._PrintInfo = value;
					this.SendPropertyChanged("PrintInfo");
					this.OnPrintInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="VARCHAR(20) NOT NULL", CanBeNull=false)]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartNo", DbType="INT NOT NULL")]
		public int StartNo
		{
			get
			{
				return this._StartNo;
			}
			set
			{
				if ((this._StartNo != value))
				{
					this.OnStartNoChanging(value);
					this.SendPropertyChanging();
					this._StartNo = value;
					this.SendPropertyChanged("StartNo");
					this.OnStartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndNo", DbType="INT NOT NULL")]
		public int EndNo
		{
			get
			{
				return this._EndNo;
			}
			set
			{
				if ((this._EndNo != value))
				{
					this.OnEndNoChanging(value);
					this.SendPropertyChanging();
					this._EndNo = value;
					this.SendPropertyChanged("EndNo");
					this.OnEndNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowNo", DbType="INT NOT NULL")]
		public int NowNo
		{
			get
			{
				return this._NowNo;
			}
			set
			{
				if ((this._NowNo != value))
				{
					this.OnNowNoChanging(value);
					this.SendPropertyChanging();
					this._NowNo = value;
					this.SendPropertyChanged("NowNo");
					this.OnNowNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
